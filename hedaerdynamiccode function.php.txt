// Function for nav menu  fucntion file code
function wp_get_menu_array($current_menu) {
 $array_menu = wp_get_nav_menu_items($current_menu);
    $menu = array();
    foreach ($array_menu as $m) {
		
        if (empty($m->menu_item_parent)) {
            $menu[$m->ID] = array();
            $menu[$m->ID]['ID']      =   $m->ID;
            $menu[$m->ID]['title']       =   $m->title;
            $menu[$m->ID]['url']         =   $m->url;
            $menu[$m->ID]['children']    =   array();
        }
    }
    $submenu = array();
    foreach ($array_menu as $m) {
        if ($m->menu_item_parent) {
       
            $submenu[$m->ID] = array();
            $submenu[$m->ID]['ID']       =   $m->ID;
            $submenu[$m->ID]['title']    =   $m->title;
            $submenu[$m->ID]['url']  =   $m->url;
			if (isset($m->classes[0]) && $m->classes[0]!='') {
				$submenu[$m->ID]['class']  =   $m->classes[0];
			}
            $menu[$m->menu_item_parent]['children'][$m->ID] = $submenu[$m->ID];
		 
        }
    }
    return $menu;
}

// function file code end
header filed code
<div class="collapse navbar-collapse" id="navbarCollapse">
                    <?php
					$menu = wp_get_menu_array('Header Menus');

// Start the navigation bar
echo '<div class="collapse navbar-collapse" id="navbarCollapse">';
echo '<div class="navbar-nav ms-auto py-0">';

foreach ($menu as $menuItem) {
    $url = $menuItem['url'];
    $text = $menuItem['title'];

    if (empty($menuItem['children'])) {
        echo '<a href="' . $url . '" class="nav-item nav-link">' . $text . '</a>';
    } else {
        echo '<div class="nav-item dropdown">';
        echo '<a href="' . $url . '" class="nav-link dropdown-toggle" data-bs-toggle="dropdown">' . $text . '</a>';
        echo '<div class="dropdown-menu m-0">';

        foreach ($menuItem['children'] as $submenuItem) {
            $submenuUrl = $submenuItem['url'];
            $submenuText = $submenuItem['title'];
            echo '<a href="' . $submenuUrl . '" class="dropdown-item">' . $submenuText . '</a>';
        }

        echo '</div>'; // Close dropdown menu
        echo '</div>'; // Close nav-item dropdown
    }
}

// Close the navigation bar
echo '</div>';
echo '</div>';
					
					?>
                </div>
//header file cdoe end





//create custom post type gorav sir 

function register_custom_posts_portfolio() {
 
    $register_labels = array(
        'name'               => 'Service',
        'singular_name'      => 'service',
        'menu_name'          => 'Service'
    );
$products_args = array(
    'labels'             => $register_labels,
    'public'             => true,
    'capability_type'    => 'post',
    'has_archive'        => true,
    'exclude_from_search' => false,
    'supports'           => array('title', 'editor', 'excerpt', 'thumbnail', 'revisions', 'custom-fields', 'comments'),
);

    register_post_type('service', $products_args);
 
  register_taxonomy(
      'services',
      'service',
     array(
       'label' => __('Service Categories'),
       'rewrite' => array( 'slug' => 'services' ),
       'hierarchical' => true,
      )
    );
 
}

function switch_on_comments_automatically(){
    global $wpdb;
    $wpdb->query( $wpdb->prepare("UPDATE $wpdb->posts SET comment_status = 'open'")); 
}
switch_on_comments_automatically();
//end custom post type gorav sir
# BEGIN WordPress
# The directives (lines) between "BEGIN WordPress" and "END WordPress" are
# dynamically generated, and should only be modified via WordPress filters.
# Any changes to the directives between these markers will be overwritten.
<IfModule mod_rewrite.c>
RewriteEngine On
RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]
RewriteBase /hardges/
RewriteRule ^index\.php$ - [L]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /hardges/index.php [L]
</IfModule>
<IfModule mod_php.c>
    php_value upload_max_filesize 2048M
    php_value post_max_size 2048M
    php_value memory_limit 512M
    php_value max_execution_time 300
    php_value max_input_time 300
</IfModule>
